/*

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

*/

const getTriangleNumber = num => {
  let sum = 0;
  let count = 1;
  while (count <= num) {
    sum += count;
    count++;
  }
  return sum;
}

const getTriangleNumbers = num => {
  let results = [];
  for (let i = 1; i <= num; i++) {
    results.push(getTriangleNumber(i));
  }
  return results;
}

const getFactors = num => {
  let results = [];
  let max = Math.floor(Math.sqrt(num));
  let count = 1;
  // Get the list of factors
  while (count <= max) {
    if (num % count === 0) {
      let factor = num / count;
      results.push(factor);
      if (results.indexOf(count) === -1) {
        results.push(count);
      }
    }
    count++;
  }
  return results.sort((a, b) => a - b);
}

const getTriangleNumberCertainDivisors = num => {
  let count = 1;
  while (true) {
    let triNum = getTriangleNumber(count);
    if (getFactors(triNum).length > num) {
      return triNum;
    }
    count++;
  }
}